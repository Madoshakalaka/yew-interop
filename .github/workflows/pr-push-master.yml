name: pr-push-master

on:
  pull_request:
    branches: [ master ]
    paths-ignore:
      - 'docs/**'
      - '**/*.md'
  push:
    branches: [ master ]
    paths-ignore:
      - 'docs/**'
      - '**/*.md'

env:
  CARGO_TERM_COLOR: always

jobs:

  lint:
    name: Lint Everything
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.head_ref }}
      - uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            src:
              - '**/*.rs'

      - if: steps.changes.outputs.src == 'true'
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          profile: minimal
          components: rustfmt

      - if: steps.changes.outputs.src == 'true'
        name: Run fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all

      - if: steps.changes.outputs.src == 'true'
        name: Commit Lint Fixes
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "🤖🧹 lint"


  build-dev-tool:
    name: Build dev-tool Binaries
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.head_ref }}
      - uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            src:
              - 'dev-tool/src/**'
              - 'dev-tool/Cargo.toml'
        # run only if some file in the folder was changed
      - if: steps.changes.outputs.src == 'true'
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
          profile: minimal
          components: clippy
      - if: steps.changes.outputs.src == 'true'
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: cargo-${{ runner.os }}-${{ hashFiles('dev-tool/Cargo.toml') }}
          restore-keys: |
            cargo-${{ runner.os }}-

      - name: Run clippy
        if: steps.changes.outputs.src == 'true'
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -p dev-tool -- -D warnings

      - name: Build Binaries
        if: steps.changes.outputs.src == 'true'
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: -p dev-tool --bins --release --out-dir dev-tool/ci-bin -Z unstable-options
      - name: Commit Lint Fixes and Binaries
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "🤖🧹 build ci binaries"
        
  tests:
    name: Tests
    runs-on: ubuntu-latest
    needs: build-dev-tool
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.head_ref }}
      - uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            example:
              - 'example/**'
            integration-test:
              - 'integration-test/**'
            yew-interop:
              - 'yew-interop/**'
            yew-interop-core:
              - 'yew-interop-core/**'
            yew-interop-macro:
              - 'yew-interop-macro/**'

      - uses: actions-rs/toolchain@v1
        if: steps.changes.outputs.example == 'true' || steps.changes.outputs.yew-interop == 'true' || steps.changes.outputs.yew-interop-core == 'true' || steps.changes.outputs.yew-interop-macro == 'true' || steps.changes.outputs.integration-test == 'true'
        with:
          toolchain: stable
          override: true
          profile: minimal
          components: clippy

      - uses: actions/cache@v2
        if: steps.changes.outputs.example == 'true' || steps.changes.outputs.yew-interop == 'true' || steps.changes.outputs.yew-interop-core == 'true' || steps.changes.outputs.yew-interop-macro == 'true'
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: cargo-${{ runner.os }}-${{ hashFiles('**/Cargo.toml') }}
          restore-keys: |
            cargo-${{ runner.os }}-
      - name: Clip Example
        if: steps.changes.outputs.example == 'true'
        run: ./dev-tool/ci-bin/clip-example
      - name: Clip yew-interop with Feature yew-next
        if: steps.changes.outputs.yew-interop == 'true'
        run: ./dev-tool/ci-bin/clip-yew-interop-next
      - name: Clip yew-interop with Feature yew-stable
        if: steps.changes.outputs.yew-interop == 'true'
        run: ./dev-tool/ci-bin/clip-yew-interop-stable
      - name: Clip integration test with Feature yew-stable
        if: steps.changes.outputs.integration-test == 'true'
        run: ./dev-tool/ci-bin/clip-integration-test-stable
      - name: Clip integration test with Feature yew-stable and script
        if: steps.changes.outputs.integration-test == 'true'
        run: ./dev-tool/ci-bin/clip-integration-test-stable-script
      - name: Clip integration test with Feature yew-next
        if: steps.changes.outputs.integration-test == 'true'
        run: ./dev-tool/ci-bin/clip-integration-test-next
      - name: Clip integration test with Feature yew-next and script
        if: steps.changes.outputs.integration-test == 'true'
        run: ./dev-tool/ci-bin/clip-integration-test-next-script
